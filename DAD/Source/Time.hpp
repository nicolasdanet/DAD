
/* Copyright (c) 2022 Nicolas Danet. */

/* < https://opensource.org/licenses/GPL-3.0 > */

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

#pragma once

#include <JuceHeader.h>

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

namespace core {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

struct Time {

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------
// MARK: -

static juce::Time parse (const juce::String& s)
{
    juce::StringArray a (juce::StringArray::fromTokens (s, " -:", ""));

    if (a.size() == 6) {
    
        int year    = a[0].getIntValue();
        int month   = a[1].getIntValue();
        int day     = a[2].getIntValue();
        int hours   = a[3].getIntValue();
        int minutes = a[4].getIntValue();
        int seconds = a[5].getIntValue();
        
        return juce::Time (year, month, day, hours, minutes, seconds);
    }

    return {};
}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

};

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

}

// -----------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------

